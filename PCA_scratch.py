# -*- coding: utf-8 -*-
"""

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fFoRVNsIRwavftTwsfXvB4phff0vzL9h
"""

import pandas as pd
import numpy as np

def cov(X):
    return X.T @ X

def PCA(A , n_components):
    # M = np.mean(A.T,axis=1)
    columns_A = A.columns
    A = np.array(A)
    M = np.mean(A.T, axis=1)
    S = np.std(A.T, axis=1)
    # print(S)
    C = (A - M)/S
    V = cov(C)
    values , vectors = np.linalg.eig(V)

    sorted_indices = np.argsort(values)[::-1]
    values = values[sorted_indices]
    vectors = vectors[:, sorted_indices]
    columns_A = columns_A[sorted_indices]

    # values = values[:n_components]
    # vectors = vectors[:, :n_components]

    P =np.dot(C,vectors)
    P = P[:,:n_components]
    P_std = np.std(P.T,axis=1)
    df = pd.DataFrame(P, columns= columns_A[:n_components])
    return df,P_std, vectors[:,:n_components]

